<channel version="3.1.0">
  <id>fdd39025-12ee-4398-9d81-a80470181582</id>
  <nextMetaDataId>12</nextMetaDataId>
  <name>Census Events</name>
  <description>This channel will attempt to read the submissions from ODK in order, according to the form&apos;s collectionDateTime field.&#xd;
&#xd;
As of 14 May 2014, it only expects Individual forms.&#xd;
&#xd;
</description>
  <enabled>true</enabled>
  <lastModified>
    <time>1413912960793</time>
    <timezone>America/New_York</timezone>
  </lastModified>
  <revision>1</revision>
  <sourceConnector version="3.1.0">
    <metaDataId>0</metaDataId>
    <name>sourceConnector</name>
    <properties class="com.mirth.connect.connectors.js.JavaScriptReceiverProperties" version="3.1.0">
      <pluginProperties/>
      <pollConnectorProperties version="3.1.0">
        <pollingType>interval</pollingType>
        <pollingHour>0</pollingHour>
        <pollingMinute>0</pollingMinute>
        <pollingFrequency>3000</pollingFrequency>
      </pollConnectorProperties>
      <sourceConnectorProperties version="3.1.0">
        <responseVariable>None</responseVariable>
        <respondAfterProcessing>true</respondAfterProcessing>
        <processBatch>false</processBatch>
        <firstResponse>false</firstResponse>
      </sourceConnectorProperties>
      <script>var newForms = new java.util.ArrayList()
var dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;, globalMap.get(&quot;ODK_DATABASE_URL&quot;), globalMap.get(&quot;ODK_DATABASE_USER&quot;), globalMap.get(&quot;ODK_DATABASE_PASSWORD&quot;));

var locationResult = dbConn.executeCachedQuery(&quot;SELECT &quot;+ globalMap.get(&quot;LOCATION_COLUMNS&quot;) +&quot; FROM &quot; + globalMap.get(&quot;LOCATION_TABLE&quot;) + &quot; WHERE processed_by_mirth IS NULL ORDER BY COLLECTION_DATE_TIME&quot;);

while (locationResult.next()) {
  // create the locationf
  var locationXML = resultSetToXml(locationResult, &quot;&lt;locationForm event=&apos;locationForm&apos; table-name=&apos;&quot; + globalMap.get(&quot;LOCATION_TABLE&quot;) + &quot;&apos;/&gt;&quot;);
  newForms.add(locationXML.toString());
}

// emit new individuals
var individualResult = dbConn.executeCachedQuery(&quot;SELECT &quot;+ globalMap.get(&quot;INDIVIDUAL_COLUMNS&quot;) +&quot; FROM &quot; + globalMap.get(&quot;INDIVIDUAL_TABLE&quot;) + &quot; WHERE processed_by_mirth IS NULL ORDER BY COLLECTION_DATE_TIME&quot;);
while (individualResult.next()) {
  // create the individual herself
  var individualXML = resultSetToXml(individualResult, &quot;&lt;individual event=&apos;individual&apos; table-name=&apos;&quot; + globalMap.get(&quot;INDIVIDUAL_TABLE&quot;) + &quot;&apos;/&gt;&quot;);
  newForms.add(individualXML.toString());
}

dbConn.close();
return newForms;</script>
    </properties>
    <transformer version="3.1.0">
      <steps/>
      <inboundTemplate encoding="base64"></inboundTemplate>
      <inboundDataType>XML</inboundDataType>
      <outboundDataType>XML</outboundDataType>
      <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.1.0">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.1.0">
          <stripNamespaces>true</stripNamespaces>
        </serializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.1.0">
          <splitType>Element_Name</splitType>
          <elementName></elementName>
          <level>1</level>
          <query></query>
          <batchScript></batchScript>
        </batchProperties>
      </inboundProperties>
      <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.1.0">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.1.0">
          <stripNamespaces>true</stripNamespaces>
        </serializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.1.0">
          <splitType>Element_Name</splitType>
          <elementName></elementName>
          <level>1</level>
          <query></query>
          <batchScript></batchScript>
        </batchProperties>
      </outboundProperties>
    </transformer>
    <filter version="3.1.0">
      <rules/>
    </filter>
    <transportName>JavaScript Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <waitForPrevious>true</waitForPrevious>
  </sourceConnector>
  <destinationConnectors>
    <connector version="3.1.0">
      <metaDataId>1</metaDataId>
      <name>Individual</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.1.0">
        <pluginProperties/>
        <destinationConnectorProperties version="3.1.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <threadCount>1</threadCount>
          <validateResponse>false</validateResponse>
        </destinationConnectorProperties>
        <host>http://bioko-cims-test-clone.rcg.usm.maine.edu:8080/openhds/api/rest/individualForm</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map"/>
        <parameters class="linked-hash-map"/>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes></responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>false</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>true</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>true</usePreemptiveAuthentication>
        <username>admin</username>
        <password>test</password>
        <content>${message.transformedData}</content>
        <contentType>application/xml</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="3.1.0">
        <steps>
          <step>
            <sequenceNumber>0</sequenceNumber>
            <name>field worker extId</name>
            <script>tmp[&apos;field_worker_ext_id&apos;] = validate(msg[&apos;field_worker_ext_id&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;field_worker_ext_id&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;field_worker_ext_id&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>1</sequenceNumber>
            <name>gender</name>
            <script>tmp[&apos;individual_gender&apos;] = validate(msg[&apos;individual_gender&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;individual_gender&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;individual_gender&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>2</sequenceNumber>
            <name>age units</name>
            <script>tmp[&apos;individual_age_units&apos;] = validate(msg[&apos;individual_age_units&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;individual_age_units&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;individual_age_units&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>3</sequenceNumber>
            <name>phone number</name>
            <script>tmp[&apos;individual_phone_number&apos;] = validate(msg[&apos;individual_phone_number&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;individual_phone_number&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;individual_phone_number&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>4</sequenceNumber>
            <name>household extId</name>
            <script>tmp[&apos;household_ext_id&apos;] = validate(msg[&apos;household_ext_id&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;household_ext_id&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;household_ext_id&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>5</sequenceNumber>
            <name>age</name>
            <script>tmp[&apos;individual_age&apos;] = validate(msg[&apos;individual_age&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;individual_age&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;individual_age&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>6</sequenceNumber>
            <name>dip</name>
            <script>tmp[&apos;individual_dip&apos;] = validate(msg[&apos;individual_dip&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;individual_dip&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;individual_dip&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>7</sequenceNumber>
            <name>point of contact phone number</name>
            <script>tmp[&apos;individual_point_of_contact_phone_number&apos;] = validate(msg[&apos;individual_point_of_contact_phone_number&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;individual_point_of_contact_phone_number&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;individual_point_of_contact_phone_number&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>8</sequenceNumber>
            <name>relationship to head of household</name>
            <script>tmp[&apos;individual_relationship_to_head_of_household&apos;] = validate(msg[&apos;individual_relationship_to_head_of_household&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;individual_relationship_to_head_of_household&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;individual_relationship_to_head_of_household&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>9</sequenceNumber>
            <name>language preference</name>
            <script>tmp[&apos;individual_language_preference&apos;] = validate(msg[&apos;individual_language_preference&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;individual_language_preference&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;individual_language_preference&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>10</sequenceNumber>
            <name>member status</name>
            <script>tmp[&apos;individual_member_status&apos;] = validate(msg[&apos;individual_member_status&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;individual_member_status&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;individual_member_status&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>11</sequenceNumber>
            <name>first name</name>
            <script>tmp[&apos;individual_first_name&apos;] = validate(msg[&apos;individual_first_name&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;individual_first_name&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;individual_first_name&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>12</sequenceNumber>
            <name>other names</name>
            <script>tmp[&apos;individual_other_names&apos;] = validate(msg[&apos;individual_other_names&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;individual_other_names&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;individual_other_names&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>13</sequenceNumber>
            <name>date time</name>
            <script>tmp[&apos;collection_date_time&apos;] = validate(msg[&apos;collection_date_time&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;collection_date_time&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;collection_date_time&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>14</sequenceNumber>
            <name>point of contact name</name>
            <script>tmp[&apos;individual_point_of_contact_name&apos;] = validate(msg[&apos;individual_point_of_contact_name&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;individual_point_of_contact_name&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;individual_point_of_contact_name&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>15</sequenceNumber>
            <name>last name</name>
            <script>tmp[&apos;individual_last_name&apos;] = validate(msg[&apos;individual_last_name&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;individual_last_name&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;individual_last_name&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>16</sequenceNumber>
            <name>other phone number</name>
            <script>tmp[&apos;individual_other_phone_number&apos;] = validate(msg[&apos;individual_other_phone_number&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;individual_other_phone_number&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;individual_other_phone_number&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>17</sequenceNumber>
            <name>individual extId</name>
            <script>tmp[&apos;individual_ext_id&apos;] = validate(msg[&apos;individual_ext_id&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;individual_ext_id&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;individual_ext_id&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>18</sequenceNumber>
            <name>date of birth</name>
            <script>tmp[&apos;individual_date_of_birth&apos;] = validate(msg[&apos;individual_date_of_birth&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;individual_date_of_birth&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;individual_date_of_birth&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>19</sequenceNumber>
            <name>processed by mirth</name>
            <script>tmp[&apos;processed_by_mirth&apos;] = validate(msg[&apos;processed_by_mirth&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;processed_by_mirth&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;processed_by_mirth&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>20</sequenceNumber>
            <name>nationality</name>
            <script>tmp[&apos;individual_nationality&apos;] = validate(msg[&apos;individual_nationality&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;individual_nationality&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;individual_nationality&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
        </steps>
        <inboundTemplate encoding="base64">PGluZGl2aWR1YWwgZXZlbnQ9ImluZGl2aWR1YWwiIHRhYmxlLW5hbWU9ImluZGl2aWR1YWxfY29y
ZSI+CiAgPF91cmk+PC9fdXJpPgogIDxpbmRpdmlkdWFsX2dlbmRlcj48L2luZGl2aWR1YWxfZ2Vu
ZGVyPgogIDxpbmRpdmlkdWFsX25hdGlvbmFsaXR5PjwvaW5kaXZpZHVhbF9uYXRpb25hbGl0eT4K
ICA8aW5kaXZpZHVhbF9hZ2VfdW5pdHM+PC9pbmRpdmlkdWFsX2FnZV91bml0cz4KICA8aW5kaXZp
ZHVhbF9waG9uZV9udW1iZXIgID48L2luZGl2aWR1YWxfcGhvbmVfbnVtYmVyPgogIDxob3VzZWhv
bGRfZXh0X2lkID48L2hvdXNlaG9sZF9leHRfaWQ+CiAgPGluZGl2aWR1YWxfYWdlID48L2luZGl2
aWR1YWxfYWdlPgogIDxpbmRpdmlkdWFsX2RpcD48L2luZGl2aWR1YWxfZGlwPgogIDxpbmRpdmlk
dWFsX3BvaW50X29mX2NvbnRhY3RfcGhvbmVfbnVtYmVyID48L2luZGl2aWR1YWxfcG9pbnRfb2Zf
Y29udGFjdF9waG9uZV9udW1iZXI+CiAgPGluZGl2aWR1YWxfcmVsYXRpb25zaGlwX3RvX2hlYWRf
b2ZfaG91c2Vob2xkID48L2luZGl2aWR1YWxfcmVsYXRpb25zaGlwX3RvX2hlYWRfb2ZfaG91c2Vo
b2xkPgogIDxpbmRpdmlkdWFsX2xhbmd1YWdlX3ByZWZlcmVuY2UgPjwvaW5kaXZpZHVhbF9sYW5n
dWFnZV9wcmVmZXJlbmNlPgogIDxpbmRpdmlkdWFsX21lbWJlcl9zdGF0dXMgPjwvaW5kaXZpZHVh
bF9tZW1iZXJfc3RhdHVzPgogIDxpbmRpdmlkdWFsX2ZpcnN0X25hbWUgPjwvaW5kaXZpZHVhbF9m
aXJzdF9uYW1lPgogIDxpbmRpdmlkdWFsX290aGVyX25hbWVzID48L2luZGl2aWR1YWxfb3RoZXJf
bmFtZXM+CiAgPGNvbGxlY3Rpb25fZGF0ZV90aW1lID48L2NvbGxlY3Rpb25fZGF0ZV90aW1lPgog
IDxpbmRpdmlkdWFsX3BvaW50X29mX2NvbnRhY3RfbmFtZSA+PC9pbmRpdmlkdWFsX3BvaW50X29m
X2NvbnRhY3RfbmFtZT4KICA8aW5kaXZpZHVhbF9sYXN0X25hbWUgPjwvaW5kaXZpZHVhbF9sYXN0
X25hbWU+CiAgPGluZGl2aWR1YWxfb3RoZXJfcGhvbmVfbnVtYmVyID48L2luZGl2aWR1YWxfb3Ro
ZXJfcGhvbmVfbnVtYmVyPgogIDxpbmRpdmlkdWFsX2V4dF9pZCA+PC9pbmRpdmlkdWFsX2V4dF9p
ZD4KICA8aW5kaXZpZHVhbF9kYXRlX29mX2JpcnRoPjwvaW5kaXZpZHVhbF9kYXRlX29mX2JpcnRo
PgogIDxwcm9jZXNzZWRfYnlfbWlydGggPjwvcHJvY2Vzc2VkX2J5X21pcnRoPgogIDxmaWVsZF93
b3JrZXJfZXh0X2lkID48L2ZpZWxkX3dvcmtlcl9leHRfaWQ+CjwvaW5kaXZpZHVhbD4=</inboundTemplate>
        <outboundTemplate encoding="base64">PGluZGl2aWR1YWxGb3JtPgogIDxpbmRpdmlkdWFsX2dlbmRlcj48L2luZGl2aWR1YWxfZ2VuZGVy
PgogIDxpbmRpdmlkdWFsX25hdGlvbmFsaXR5PjwvaW5kaXZpZHVhbF9uYXRpb25hbGl0eT4KICA8
aW5kaXZpZHVhbF9hZ2VfdW5pdHM+PC9pbmRpdmlkdWFsX2FnZV91bml0cz4KICA8aW5kaXZpZHVh
bF9waG9uZV9udW1iZXIgID48L2luZGl2aWR1YWxfcGhvbmVfbnVtYmVyPgogIDxob3VzZWhvbGRf
ZXh0X2lkID48L2hvdXNlaG9sZF9leHRfaWQ+CiAgPGluZGl2aWR1YWxfYWdlID48L2luZGl2aWR1
YWxfYWdlPgogIDxpbmRpdmlkdWFsX2RpcD48L2luZGl2aWR1YWxfZGlwPgogIDxpbmRpdmlkdWFs
X3BvaW50X29mX2NvbnRhY3RfcGhvbmVfbnVtYmVyID48L2luZGl2aWR1YWxfcG9pbnRfb2ZfY29u
dGFjdF9waG9uZV9udW1iZXI+CiAgPGluZGl2aWR1YWxfcmVsYXRpb25zaGlwX3RvX2hlYWRfb2Zf
aG91c2Vob2xkID48L2luZGl2aWR1YWxfcmVsYXRpb25zaGlwX3RvX2hlYWRfb2ZfaG91c2Vob2xk
PgogIDxpbmRpdmlkdWFsX2xhbmd1YWdlX3ByZWZlcmVuY2UgPjwvaW5kaXZpZHVhbF9sYW5ndWFn
ZV9wcmVmZXJlbmNlPgogIDxpbmRpdmlkdWFsX21lbWJlcl9zdGF0dXMgPjwvaW5kaXZpZHVhbF9t
ZW1iZXJfc3RhdHVzPgogIDxpbmRpdmlkdWFsX2ZpcnN0X25hbWUgPjwvaW5kaXZpZHVhbF9maXJz
dF9uYW1lPgogIDxpbmRpdmlkdWFsX290aGVyX25hbWVzID48L2luZGl2aWR1YWxfb3RoZXJfbmFt
ZXM+CiAgPGNvbGxlY3Rpb25fZGF0ZV90aW1lID48L2NvbGxlY3Rpb25fZGF0ZV90aW1lPgogIDxp
bmRpdmlkdWFsX3BvaW50X29mX2NvbnRhY3RfbmFtZSA+PC9pbmRpdmlkdWFsX3BvaW50X29mX2Nv
bnRhY3RfbmFtZT4KICA8aW5kaXZpZHVhbF9sYXN0X25hbWUgPjwvaW5kaXZpZHVhbF9sYXN0X25h
bWU+CiAgPGluZGl2aWR1YWxfb3RoZXJfcGhvbmVfbnVtYmVyID48L2luZGl2aWR1YWxfb3RoZXJf
cGhvbmVfbnVtYmVyPgogIDxpbmRpdmlkdWFsX2V4dF9pZCA+PC9pbmRpdmlkdWFsX2V4dF9pZD4K
ICA8aW5kaXZpZHVhbF9kYXRlX29mX2JpcnRoPjwvaW5kaXZpZHVhbF9kYXRlX29mX2JpcnRoPgog
IDxwcm9jZXNzZWRfYnlfbWlydGggPjwvcHJvY2Vzc2VkX2J5X21pcnRoPgogIDxmaWVsZF93b3Jr
ZXJfZXh0X2lkID48L2ZpZWxkX3dvcmtlcl9leHRfaWQ+CjwvaW5kaXZpZHVhbEZvcm0+</outboundTemplate>
        <inboundDataType>XML</inboundDataType>
        <outboundDataType>XML</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.1.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.1.0">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.1.0">
            <splitType>Element_Name</splitType>
            <elementName></elementName>
            <level>1</level>
            <query></query>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.1.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.1.0">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.1.0">
            <splitType>Element_Name</splitType>
            <elementName></elementName>
            <level>1</level>
            <query></query>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.1.0">
        <steps/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>XML</inboundDataType>
        <outboundDataType>XML</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.1.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.1.0">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.1.0">
            <splitType>Element_Name</splitType>
            <elementName></elementName>
            <level>1</level>
            <query></query>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.1.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.1.0">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.1.0">
            <splitType>Element_Name</splitType>
            <elementName></elementName>
            <level>1</level>
            <query></query>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.1.0">
        <rules>
          <rule>
            <sequenceNumber>0</sequenceNumber>
            <name>New Rule</name>
            <data>
              <entry>
                <string>Script</string>
                <string>return msg[&quot;@event&quot;].toString() === &quot;individual&quot;;</string>
              </entry>
            </data>
            <type>JavaScript</type>
            <script>return msg[&quot;@event&quot;].toString() === &quot;individual&quot;;</script>
            <operator>NONE</operator>
          </rule>
        </rules>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.1.0">
      <metaDataId>11</metaDataId>
      <name>Location</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.1.0">
        <pluginProperties/>
        <destinationConnectorProperties version="3.1.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <threadCount>1</threadCount>
          <validateResponse>false</validateResponse>
        </destinationConnectorProperties>
        <host>http://bioko-cims-test-clone.rcg.usm.maine.edu:8080/openhds/api/rest/locationForm</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map"/>
        <parameters class="linked-hash-map"/>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes></responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>false</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>true</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>true</usePreemptiveAuthentication>
        <username>admin</username>
        <password>test</password>
        <content>${message.rawData}</content>
        <contentType>application/xml</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="3.1.0">
        <steps/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>XML</inboundDataType>
        <outboundDataType>XML</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.1.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.1.0">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.1.0">
            <splitType>Element_Name</splitType>
            <elementName></elementName>
            <level>1</level>
            <query></query>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.1.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.1.0">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.1.0">
            <splitType>Element_Name</splitType>
            <elementName></elementName>
            <level>1</level>
            <query></query>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.1.0">
        <steps/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>XML</inboundDataType>
        <outboundDataType>XML</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.1.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.1.0">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.1.0">
            <splitType>Element_Name</splitType>
            <elementName></elementName>
            <level>1</level>
            <query></query>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.1.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.1.0">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.1.0">
            <splitType>Element_Name</splitType>
            <elementName></elementName>
            <level>1</level>
            <query></query>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.1.0">
        <rules>
          <rule>
            <sequenceNumber>0</sequenceNumber>
            <name>New Rule</name>
            <data>
              <entry>
                <string>Script</string>
                <string>return msg[&quot;@event&quot;].toString() === &quot;locationForm&quot;;</string>
              </entry>
            </data>
            <type>JavaScript</type>
            <script>return msg[&quot;@event&quot;].toString() === &quot;locationForm&quot;;</script>
            <operator>NONE</operator>
          </rule>
        </rules>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
  </destinationConnectors>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed

// update the database record to mark it as being processed by mirth
markRecordAsProcessed(messageObject.getRawData());

return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
  <properties version="3.1.0">
    <clearGlobalChannelMap>true</clearGlobalChannelMap>
    <messageStorageMode>DEVELOPMENT</messageStorageMode>
    <encryptData>false</encryptData>
    <removeContentOnCompletion>false</removeContentOnCompletion>
    <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
    <initialState>STARTED</initialState>
    <storeAttachments>false</storeAttachments>
    <tags class="linked-hash-set"/>
    <metaDataColumns>
      <metaDataColumn>
        <name>SOURCE</name>
        <type>STRING</type>
        <mappingName>mirth_source</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>TYPE</name>
        <type>STRING</type>
        <mappingName>mirth_type</mappingName>
      </metaDataColumn>
    </metaDataColumns>
    <attachmentProperties>
      <type>None</type>
      <properties/>
    </attachmentProperties>
    <archiveEnabled>true</archiveEnabled>
  </properties>
</channel>