<channel version="3.0.3">
  <id>5d226fdb-8c69-40fc-a9df-56dbdf6b7fc2</id>
  <nextMetaDataId>7</nextMetaDataId>
  <name>Update Events</name>
  <description>Channel for Update Round demographic events</description>
  <enabled>true</enabled>
  <lastModified>
    <time>1411407130892</time>
    <timezone>America/New_York</timezone>
  </lastModified>
  <revision>37</revision>
  <sourceConnector version="3.0.3">
    <metaDataId>0</metaDataId>
    <name>sourceConnector</name>
    <properties class="com.mirth.connect.connectors.js.JavaScriptReceiverProperties" version="3.0.3">
      <pollConnectorProperties version="3.0.3">
        <pollingType>interval</pollingType>
        <pollingHour>0</pollingHour>
        <pollingMinute>0</pollingMinute>
        <pollingFrequency>3000</pollingFrequency>
      </pollConnectorProperties>
      <responseConnectorProperties version="3.0.3">
        <responseVariable>None</responseVariable>
        <defaultQueueOnResponses>
          <string>None</string>
          <string>Auto-generate (Before processing)</string>
        </defaultQueueOnResponses>
        <defaultQueueOffResponses>
          <string>None</string>
          <string>Auto-generate (Before processing)</string>
          <string>Auto-generate (After source transformer)</string>
          <string>Auto-generate (Destinations completed)</string>
          <string>Postprocessor</string>
        </defaultQueueOffResponses>
        <respondAfterProcessing>true</respondAfterProcessing>
      </responseConnectorProperties>
      <script>var newForms = new java.util.ArrayList()
var dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;, globalMap.get(&quot;ODK_DATABASE_URL&quot;), globalMap.get(&quot;ODK_DATABASE_USER&quot;), globalMap.get(&quot;ODK_DATABASE_PASSWORD&quot;));

var locationResult = dbConn.executeCachedQuery(&quot;SELECT &quot;+ globalMap.get(&quot;LOCATION_COLUMNS&quot;) +&quot; FROM &quot; + globalMap.get(&quot;LOCATION_TABLE&quot;) + &quot; WHERE processed_by_mirth IS NULL ORDER BY COLLECTION_DATE_TIME&quot;);

while (locationResult.next()) {
  // create the locationf
  var locationXML = resultSetToXml(locationResult, &quot;&lt;locationForm event=&apos;locationForm&apos; table-name=&apos;&quot; + globalMap.get(&quot;LOCATION_TABLE&quot;) + &quot;&apos;/&gt;&quot;);
  newForms.add(locationXML.toString());
}

// emit new individuals
var individualResult = dbConn.executeCachedQuery(&quot;SELECT &quot;+ globalMap.get(&quot;INDIVIDUAL_COLUMNS&quot;) +&quot; FROM &quot; + globalMap.get(&quot;INDIVIDUAL_TABLE&quot;) + &quot; WHERE processed_by_mirth IS NULL ORDER BY COLLECTION_DATE_TIME&quot;);
while (individualResult.next()) {
  // create the individual herself
  var individualXML = resultSetToXml(individualResult, &quot;&lt;individual event=&apos;individual&apos; table-name=&apos;&quot; + globalMap.get(&quot;INDIVIDUAL_TABLE&quot;) + &quot;&apos;/&gt;&quot;);
  newForms.add(individualXML.toString());
}

dbConn.close();
return newForms;</script>
    </properties>
    <transformer version="3.0.3">
      <steps/>
      <inboundDataType>XML</inboundDataType>
      <outboundDataType>XML</outboundDataType>
      <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.0.3">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.0.3">
          <stripNamespaces>true</stripNamespaces>
        </serializationProperties>
      </inboundProperties>
      <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.0.3">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.0.3">
          <stripNamespaces>true</stripNamespaces>
        </serializationProperties>
      </outboundProperties>
    </transformer>
    <filter version="3.0.3">
      <rules/>
    </filter>
    <transportName>JavaScript Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <waitForPrevious>true</waitForPrevious>
  </sourceConnector>
  <destinationConnectors>
    <connector version="3.0.3">
      <metaDataId>2</metaDataId>
      <name>Visit</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.0.3">
        <queueConnectorProperties version="3.0.3">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <threadCount>1</threadCount>
        </queueConnectorProperties>
        <host>http://bioko-cims-test-clone.rcg.usm.maine.edu:8080/openhds/api/rest/visitForm</host>
        <method>post</method>
        <headers class="linked-hash-map"/>
        <parameters class="linked-hash-map"/>
        <includeHeadersInResponse>false</includeHeadersInResponse>
        <multipart>false</multipart>
        <useAuthentication>true</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <username>admin</username>
        <password>test</password>
        <content>${message.transformedData}</content>
        <contentType>application/xml</contentType>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="3.0.3">
        <steps>
          <step>
            <sequenceNumber>0</sequenceNumber>
            <name>visit date</name>
            <script>tmp[&apos;visit_date&apos;] = validate(msg[&apos;visit_date&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;visit_date&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;visit_date&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>1</sequenceNumber>
            <name>field worker ext id</name>
            <script>tmp[&apos;field_worker_ext_id&apos;] = validate(msg[&apos;field_worker_ext_id&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;field_worker_ext_id&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;field_worker_ext_id&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>2</sequenceNumber>
            <name>visit ext id</name>
            <script>tmp[&apos;visit_ext_id&apos;] = validate(msg[&apos;visit_ext_id&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;visit_ext_id&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;visit_ext_id&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>3</sequenceNumber>
            <name>location ext id</name>
            <script>tmp[&apos;location_ext_id&apos;] = validate(msg[&apos;location_ext_id&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;location_ext_id&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;location_ext_id&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>4</sequenceNumber>
            <name>processed by mirth</name>
            <script>tmp[&apos;processed_by_mirth&apos;] = validate(msg[&apos;processed_by_mirth&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;processed_by_mirth&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;processed_by_mirth&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
        </steps>
        <inboundTemplate encoding="base64">PHZpc2l0IGV2ZW50PSJ2aXNpdCIgdGFibGUtbmFtZT0idmlzaXRfY29yZSI+CiAgPF91cmk+PC9f
dXJpPgogIDx2aXNpdF9kYXRlID48L3Zpc2l0X2RhdGU+CiAgPHZpc2l0X2V4dF9pZCA+PC92aXNp
dF9leHRfaWQ+CiAgPGxvY2F0aW9uX2V4dF9pZCA+PC9sb2NhdGlvbl9leHRfaWQ+CiAgPHByb2Nl
c3NlZF9ieV9taXJ0aCA+PC9wcm9jZXNzZWRfYnlfbWlydGg+CiAgPGZpZWxkX3dvcmtlcl9leHRf
aWQgPjwvZmllbGRfd29ya2VyX2V4dF9pZD4KPC92aXNpdD4=</inboundTemplate>
        <outboundTemplate encoding="base64">PHZpc2l0Rm9ybT4KICA8dmlzaXRfZGF0ZSA+PC92aXNpdF9kYXRlPgogIDx2aXNpdF9leHRfaWQg
PjwvdmlzaXRfZXh0X2lkPgogIDxsb2NhdGlvbl9leHRfaWQgPjwvbG9jYXRpb25fZXh0X2lkPgog
IDxwcm9jZXNzZWRfYnlfbWlydGggPjwvcHJvY2Vzc2VkX2J5X21pcnRoPgogIDxmaWVsZF93b3Jr
ZXJfZXh0X2lkID48L2ZpZWxkX3dvcmtlcl9leHRfaWQ+CjwvdmlzaXRGb3JtPg==</outboundTemplate>
        <inboundDataType>XML</inboundDataType>
        <outboundDataType>XML</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.0.3">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.0.3">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.0.3">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.0.3">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.0.3">
        <steps/>
        <inboundDataType>XML</inboundDataType>
        <outboundDataType>XML</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.0.3">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.0.3">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.0.3">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.0.3">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.0.3">
        <rules>
          <rule>
            <sequenceNumber>0</sequenceNumber>
            <name>New Rule</name>
            <data>
              <entry>
                <string>Script</string>
                <string>return msg[&quot;@event&quot;].toString() === &quot;visit&quot;;</string>
              </entry>
            </data>
            <type>JavaScript</type>
            <script>return msg[&quot;@event&quot;].toString() === &quot;visit&quot;;</script>
            <operator>NONE</operator>
          </rule>
        </rules>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.0.3">
      <metaDataId>3</metaDataId>
      <name>OutMigration</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.0.3">
        <queueConnectorProperties version="3.0.3">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <threadCount>1</threadCount>
        </queueConnectorProperties>
        <host>http://bioko-cims-test-clone.rcg.usm.maine.edu:8080/openhds/api/rest/outMigrationForm</host>
        <method>post</method>
        <headers class="linked-hash-map"/>
        <parameters class="linked-hash-map"/>
        <includeHeadersInResponse>false</includeHeadersInResponse>
        <multipart>false</multipart>
        <useAuthentication>true</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <username>admin</username>
        <password>test</password>
        <content>${message.transformedData}</content>
        <contentType>application/xml</contentType>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="3.0.3">
        <steps>
          <step>
            <sequenceNumber>0</sequenceNumber>
            <name>out migration reason</name>
            <script>tmp[&apos;out_migration_reason&apos;] = validate(msg[&apos;out_migration_reason&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;out_migration_reason&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;out_migration_reason&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>1</sequenceNumber>
            <name>visit extid</name>
            <script>tmp[&apos;visit_ext_id&apos;] = validate(msg[&apos;visit_ext_id&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;visit_ext_id&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;visit_ext_id&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>2</sequenceNumber>
            <name>out migration name of destination</name>
            <script>tmp[&apos;out_migration_name_of_destination&apos;] = validate(msg[&apos;out_migration_name_of_destination&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;out_migration_name_of_destination&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;out_migration_name_of_destination&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>3</sequenceNumber>
            <name>processed by mirth</name>
            <script>tmp[&apos;processed_by_mirth&apos;] = validate(msg[&apos;processed_by_mirth&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;processed_by_mirth&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;processed_by_mirth&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>4</sequenceNumber>
            <name>field worker extid</name>
            <script>tmp[&apos;field_worker_ext_id&apos;] = validate(msg[&apos;field_worker_ext_id&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;field_worker_ext_id&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;field_worker_ext_id&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>5</sequenceNumber>
            <name>out migration date</name>
            <script>tmp[&apos;out_migration_date&apos;] = validate(msg[&apos;out_migration_date&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;out_migration_date&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;out_migration_date&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>6</sequenceNumber>
            <name>out migration individual extid</name>
            <script>tmp[&apos;out_migration_individual_ext_id&apos;] = validate(msg[&apos;out_migration_individual_ext_id&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;out_migration_individual_ext_id&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;out_migration_individual_ext_id&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
        </steps>
        <inboundTemplate encoding="base64">PG91dG1pZ3JhdGlvbiBldmVudD0ib3V0bWlncmF0aW9uIiB0YWJsZS1uYW1lPSJvdXRfbWlncmF0
aW9uX2NvcmUiPgogIDxfdXJpPjwvX3VyaT4KICA8b3V0X21pZ3JhdGlvbl9yZWFzb24gPjwvb3V0
X21pZ3JhdGlvbl9yZWFzb24+CiAgPHZpc2l0X2V4dF9pZCA+PC92aXNpdF9leHRfaWQ+CiAgPG91
dF9taWdyYXRpb25faW5kaXZpZHVhbF9leHRfaWQgPjwvb3V0X21pZ3JhdGlvbl9pbmRpdmlkdWFs
X2V4dF9pZD4KICA8b3V0X21pZ3JhdGlvbl9uYW1lX29mX2Rlc3RpbmF0aW9uID48L291dF9taWdy
YXRpb25fbmFtZV9vZl9kZXN0aW5hdGlvbj4KICA8cHJvY2Vzc2VkX2J5X21pcnRoID48L3Byb2Nl
c3NlZF9ieV9taXJ0aD4KICA8ZmllbGRfd29ya2VyX2V4dF9pZCA+PC9maWVsZF93b3JrZXJfZXh0
X2lkPgogIDxvdXRfbWlncmF0aW9uX2RhdGUgPjwvb3V0X21pZ3JhdGlvbl9kYXRlPgo8L291dG1p
Z3JhdGlvbj4=</inboundTemplate>
        <outboundTemplate encoding="base64">PG91dE1pZ3JhdGlvbkZvcm0+CiAgPG91dF9taWdyYXRpb25fcmVhc29uID48L291dF9taWdyYXRp
b25fcmVhc29uPgogIDx2aXNpdF9leHRfaWQgPjwvdmlzaXRfZXh0X2lkPgogIDxvdXRfbWlncmF0
aW9uX2luZGl2aWR1YWxfZXh0X2lkID48L291dF9taWdyYXRpb25faW5kaXZpZHVhbF9leHRfaWQ+
CiAgPG91dF9taWdyYXRpb25fbmFtZV9vZl9kZXN0aW5hdGlvbiA+PC9vdXRfbWlncmF0aW9uX25h
bWVfb2ZfZGVzdGluYXRpb24+CiAgPHByb2Nlc3NlZF9ieV9taXJ0aCA+PC9wcm9jZXNzZWRfYnlf
bWlydGg+CiAgPGZpZWxkX3dvcmtlcl9leHRfaWQgPjwvZmllbGRfd29ya2VyX2V4dF9pZD4KICA8
b3V0X21pZ3JhdGlvbl9kYXRlID48L291dF9taWdyYXRpb25fZGF0ZT4KPC9vdXRNaWdyYXRpb25G
b3JtPg==</outboundTemplate>
        <inboundDataType>XML</inboundDataType>
        <outboundDataType>XML</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.0.3">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.0.3">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.0.3">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.0.3">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.0.3">
        <steps/>
        <inboundDataType>XML</inboundDataType>
        <outboundDataType>XML</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.0.3">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.0.3">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.0.3">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.0.3">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.0.3">
        <rules>
          <rule>
            <sequenceNumber>0</sequenceNumber>
            <name>New Rule</name>
            <data>
              <entry>
                <string>Script</string>
                <string>return msg[&quot;@event&quot;].toString() === &quot;outmigration&quot;;</string>
              </entry>
            </data>
            <type>JavaScript</type>
            <script>return msg[&quot;@event&quot;].toString() === &quot;outmigration&quot;;</script>
            <operator>NONE</operator>
          </rule>
        </rules>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.0.3">
      <metaDataId>4</metaDataId>
      <name>Death</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.0.3">
        <queueConnectorProperties version="3.0.3">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <threadCount>1</threadCount>
        </queueConnectorProperties>
        <host>http://bioko-cims-test-clone.rcg.usm.maine.edu:8080/openhds/api/rest/deathForm</host>
        <method>post</method>
        <headers class="linked-hash-map"/>
        <parameters class="linked-hash-map"/>
        <includeHeadersInResponse>false</includeHeadersInResponse>
        <multipart>false</multipart>
        <useAuthentication>true</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <username>admin</username>
        <password>test</password>
        <content>${message.transformedData}</content>
        <contentType>application/xml</contentType>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="3.0.3">
        <steps>
          <step>
            <sequenceNumber>0</sequenceNumber>
            <name>cause of death</name>
            <script>tmp[&apos;cause_of_death&apos;] = validate(msg[&apos;cause_of_death&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;cause_of_death&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;cause_of_death&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>1</sequenceNumber>
            <name>place of death</name>
            <script>tmp[&apos;place_of_death&apos;] = validate(msg[&apos;place_of_death&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;place_of_death&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;place_of_death&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>2</sequenceNumber>
            <name>date of death</name>
            <script>tmp[&apos;date_of_death&apos;] = validate(msg[&apos;date_of_death&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;date_of_death&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;date_of_death&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>3</sequenceNumber>
            <name>individual ext id</name>
            <script>tmp[&apos;individual_ext_id&apos;] = validate(msg[&apos;individual_ext_id&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;individual_ext_id&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;individual_ext_id&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>4</sequenceNumber>
            <name>field worker ext id</name>
            <script>tmp[&apos;field_worker_ext_id&apos;] = validate(msg[&apos;field_worker_ext_id&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;field_worker_ext_id&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;field_worker_ext_id&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>5</sequenceNumber>
            <name>visit ext id</name>
            <script>tmp[&apos;visit_ext_id&apos;] = validate(msg[&apos;visit_ext_id&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;visit_ext_id&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;visit_ext_id&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>6</sequenceNumber>
            <name>collection date time</name>
            <script>tmp[&apos;collection_date_time&apos;] = validate(msg[&apos;collection_date_time&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;collection_date_time&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;collection_date_time&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>7</sequenceNumber>
            <name>processed by mirth</name>
            <script>tmp[&apos;processed_by_mirth&apos;] = validate(msg[&apos;processed_by_mirth&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;processed_by_mirth&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;processed_by_mirth&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
        </steps>
        <inboundTemplate encoding="base64">PGRlYXRoIGV2ZW50PSJkZWF0aCIgdGFibGUtbmFtZT0iZGVhdGhfY29yZSI+CiAgPF91cmk+PC9f
dXJpPgogIDxjYXVzZV9vZl9kZWF0aCA+PC9jYXVzZV9vZl9kZWF0aD4KICA8cGxhY2Vfb2ZfZGVh
dGggPjwvcGxhY2Vfb2ZfZGVhdGg+CiAgPHZpc2l0X2V4dF9pZCA+PC92aXNpdF9leHRfaWQ+CiAg
PGluZGl2aWR1YWxfZXh0X2lkID48L2luZGl2aWR1YWxfZXh0X2lkPgogIDxkYXRlX29mX2RlYXRo
ID48L2RhdGVfb2ZfZGVhdGg+CiAgPHByb2Nlc3NlZF9ieV9taXJ0aCA+PC9wcm9jZXNzZWRfYnlf
bWlydGg+CiAgPGZpZWxkX3dvcmtlcl9leHRfaWQgPjwvZmllbGRfd29ya2VyX2V4dF9pZD4KICA8
Y29sbGVjdGlvbl9kYXRlX3RpbWUgPjwvY29sbGVjdGlvbl9kYXRlX3RpbWU+CjwvZGVhdGg+</inboundTemplate>
        <outboundTemplate encoding="base64">PGRlYXRoRm9ybT4KICA8Y2F1c2Vfb2ZfZGVhdGggPjwvY2F1c2Vfb2ZfZGVhdGg+CiAgPHBsYWNl
X29mX2RlYXRoID48L3BsYWNlX29mX2RlYXRoPgogIDx2aXNpdF9leHRfaWQgPjwvdmlzaXRfZXh0
X2lkPgogIDxpbmRpdmlkdWFsX2V4dF9pZCA+PC9pbmRpdmlkdWFsX2V4dF9pZD4KICA8ZGF0ZV9v
Zl9kZWF0aCA+PC9kYXRlX29mX2RlYXRoPgogIDxwcm9jZXNzZWRfYnlfbWlydGggPjwvcHJvY2Vz
c2VkX2J5X21pcnRoPgogIDxmaWVsZF93b3JrZXJfZXh0X2lkID48L2ZpZWxkX3dvcmtlcl9leHRf
aWQ+CiAgPGNvbGxlY3Rpb25fZGF0ZV90aW1lID48L2NvbGxlY3Rpb25fZGF0ZV90aW1lPgo8L2Rl
YXRoRm9ybT4=</outboundTemplate>
        <inboundDataType>XML</inboundDataType>
        <outboundDataType>XML</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.0.3">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.0.3">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.0.3">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.0.3">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.0.3">
        <steps/>
        <inboundDataType>XML</inboundDataType>
        <outboundDataType>XML</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.0.3">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.0.3">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.0.3">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.0.3">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.0.3">
        <rules>
          <rule>
            <sequenceNumber>0</sequenceNumber>
            <name>New Rule</name>
            <data>
              <entry>
                <string>Script</string>
                <string>return msg[&quot;@event&quot;].toString() === &quot;death&quot;;</string>
              </entry>
            </data>
            <type>JavaScript</type>
            <script>return msg[&quot;@event&quot;].toString() === &quot;death&quot;;</script>
            <operator>NONE</operator>
          </rule>
        </rules>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.0.3">
      <metaDataId>5</metaDataId>
      <name>PregnancyObservation</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.0.3">
        <queueConnectorProperties version="3.0.3">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <threadCount>1</threadCount>
        </queueConnectorProperties>
        <host>http://bioko-cims-test-clone.rcg.usm.maine.edu:8080/openhds/api/rest/pregnancyObservationForm</host>
        <method>post</method>
        <headers class="linked-hash-map"/>
        <parameters class="linked-hash-map"/>
        <includeHeadersInResponse>false</includeHeadersInResponse>
        <multipart>false</multipart>
        <useAuthentication>true</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <username>admin</username>
        <password>test</password>
        <content>${message.transformedData}</content>
        <contentType>application/xml</contentType>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="3.0.3">
        <steps>
          <step>
            <sequenceNumber>0</sequenceNumber>
            <name>processed by mirth</name>
            <script>tmp[&apos;processed_by_mirth&apos;] = validate(msg[&apos;processed_by_mirth&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;processed_by_mirth&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;processed_by_mirth&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>1</sequenceNumber>
            <name>individual ext id</name>
            <script>tmp[&apos;individual_ext_id&apos;] = validate(msg[&apos;individual_ext_id&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;individual_ext_id&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;individual_ext_id&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>2</sequenceNumber>
            <name>field worker ext id</name>
            <script>tmp[&apos;field_worker_ext_id&apos;] = validate(msg[&apos;field_worker_ext_id&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;field_worker_ext_id&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;field_worker_ext_id&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>3</sequenceNumber>
            <name>visit ext id</name>
            <script>tmp[&apos;visit_ext_id&apos;] = validate(msg[&apos;visit_ext_id&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;visit_ext_id&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;visit_ext_id&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>4</sequenceNumber>
            <name>expected delivery date</name>
            <script>tmp[&apos;expected_delivery_date&apos;] = validate(msg[&apos;expected_delivery_date&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;expected_delivery_date&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;expected_delivery_date&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>5</sequenceNumber>
            <name>recorded date</name>
            <script>tmp[&apos;recorded_date&apos;] = validate(msg[&apos;recorded_date&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;recorded_date&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;recorded_date&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
        </steps>
        <inboundTemplate encoding="base64">PHByZWduYW5jeW9ic2VydmF0aW9uIGV2ZW50PSJwcmVnbmFuY3lvYnNlcnZhdGlvbiIgdGFibGUt
bmFtZT0icHJlZ25hbmN5X29ic2VydmF0aW9uX2NvcmUiPgogIDxfdXJpPjwvX3VyaT4KICA8cmVj
b3JkZWRfZGF0ZSA+PC9yZWNvcmRlZF9kYXRlPgogIDx2aXNpdF9leHRfaWQgPjwvdmlzaXRfZXh0
X2lkPgogIDxpbmRpdmlkdWFsX2V4dF9pZCA+PC9pbmRpdmlkdWFsX2V4dF9pZD4KICA8cHJvY2Vz
c2VkX2J5X21pcnRoID48L3Byb2Nlc3NlZF9ieV9taXJ0aD4KICA8ZmllbGRfd29ya2VyX2V4dF9p
ZCA+PC9maWVsZF93b3JrZXJfZXh0X2lkPgogIDxleHBlY3RlZF9kZWxpdmVyeV9kYXRlID48L2V4
cGVjdGVkX2RlbGl2ZXJ5X2RhdGU+CjwvcHJlZ25hbmN5b2JzZXJ2YXRpb24+</inboundTemplate>
        <outboundTemplate encoding="base64">PHByZWduYW5jeU9ic2VydmF0aW9uRm9ybT4KICA8cmVjb3JkZWRfZGF0ZSA+PC9yZWNvcmRlZF9k
YXRlPgogIDx2aXNpdF9leHRfaWQgPjwvdmlzaXRfZXh0X2lkPgogIDxpbmRpdmlkdWFsX2V4dF9p
ZCA+PC9pbmRpdmlkdWFsX2V4dF9pZD4KICA8cHJvY2Vzc2VkX2J5X21pcnRoID48L3Byb2Nlc3Nl
ZF9ieV9taXJ0aD4KICA8ZmllbGRfd29ya2VyX2V4dF9pZCA+PC9maWVsZF93b3JrZXJfZXh0X2lk
PgogIDxleHBlY3RlZF9kZWxpdmVyeV9kYXRlID48L2V4cGVjdGVkX2RlbGl2ZXJ5X2RhdGU+Cjwv
cHJlZ25hbmN5T2JzZXJ2YXRpb25Gb3JtPg==</outboundTemplate>
        <inboundDataType>XML</inboundDataType>
        <outboundDataType>XML</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.0.3">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.0.3">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.0.3">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.0.3">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.0.3">
        <steps/>
        <inboundDataType>XML</inboundDataType>
        <outboundDataType>XML</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.0.3">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.0.3">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.0.3">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.0.3">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.0.3">
        <rules>
          <rule>
            <sequenceNumber>0</sequenceNumber>
            <name>New Rule</name>
            <data>
              <entry>
                <string>Script</string>
                <string>return msg[&quot;@event&quot;].toString() === &quot;pregnancyobservation&quot;;</string>
              </entry>
            </data>
            <type>JavaScript</type>
            <script>return msg[&quot;@event&quot;].toString() === &quot;pregnancyobservation&quot;;</script>
            <operator>NONE</operator>
          </rule>
        </rules>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.0.3">
      <metaDataId>6</metaDataId>
      <name>InMigration</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.0.3">
        <queueConnectorProperties version="3.0.3">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <threadCount>1</threadCount>
        </queueConnectorProperties>
        <host>http://bioko-cims-test-clone.rcg.usm.maine.edu:8080/openhds/api/rest/inMigrationForm</host>
        <method>post</method>
        <headers class="linked-hash-map"/>
        <parameters class="linked-hash-map"/>
        <includeHeadersInResponse>false</includeHeadersInResponse>
        <multipart>false</multipart>
        <useAuthentication>true</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <username>admin</username>
        <password>test</password>
        <content>${message.transformedData}</content>
        <contentType>application/xml</contentType>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="3.0.3">
        <steps>
          <step>
            <sequenceNumber>0</sequenceNumber>
            <name>migration_reason (out) &lt;-- migration_reason (in)</name>
            <script>tmp[&apos;migration_reason&apos;] = validate(msg[&apos;migration_reason&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;migration_reason&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;migration_reason&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>1</sequenceNumber>
            <name>migration_origin (out) &lt;-- migration_origin (in)</name>
            <script>tmp[&apos;migration_origin&apos;] = validate(msg[&apos;migration_origin&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;migration_origin&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;migration_origin&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>2</sequenceNumber>
            <name>location_ext_id (out) &lt;-- location_ext_id (in)</name>
            <script>tmp[&apos;location_ext_id&apos;] = validate(msg[&apos;location_ext_id&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;location_ext_id&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;location_ext_id&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>3</sequenceNumber>
            <name>collection_date_time (out) &lt;-- collection_date_time (in)</name>
            <script>tmp[&apos;collection_date_time&apos;] = validate(msg[&apos;collection_date_time&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;collection_date_time&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;collection_date_time&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>4</sequenceNumber>
            <name>individual_ext_id (out) &lt;-- individual_ext_id (in)</name>
            <script>tmp[&apos;individual_ext_id&apos;] = validate(msg[&apos;individual_ext_id&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;individual_ext_id&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;individual_ext_id&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>5</sequenceNumber>
            <name>migration_type (out) &lt;-- migration_type (in)</name>
            <script>tmp[&apos;migration_type&apos;] = validate(msg[&apos;migration_type&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;migration_type&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;migration_type&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>6</sequenceNumber>
            <name>visit_ext_id (out) &lt;-- visit_ext_id (in)</name>
            <script>tmp[&apos;visit_ext_id&apos;] = validate(msg[&apos;visit_ext_id&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;visit_ext_id&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;visit_ext_id&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>7</sequenceNumber>
            <name>needs_review (out) &lt;-- needs_review (in)</name>
            <script>tmp[&apos;needs_review&apos;] = validate(msg[&apos;needs_review&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;needs_review&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;needs_review&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>8</sequenceNumber>
            <name>field_worker_ext_id (out) &lt;-- field_worker_ext_id (in)</name>
            <script>tmp[&apos;field_worker_ext_id&apos;] = validate(msg[&apos;field_worker_ext_id&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;field_worker_ext_id&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;field_worker_ext_id&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>9</sequenceNumber>
            <name>processed_by_mirth (out) &lt;-- processed_by_mirth (in)</name>
            <script>tmp[&apos;processed_by_mirth&apos;] = validate(msg[&apos;processed_by_mirth&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;processed_by_mirth&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;processed_by_mirth&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>10</sequenceNumber>
            <name>migration_date (out) &lt;-- migration_date (in)</name>
            <script>tmp[&apos;migration_date&apos;] = validate(msg[&apos;migration_date&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;migration_date&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;migration_date&apos;].toString()</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
        </steps>
        <inboundTemplate encoding="base64">PGlubWlncmF0aW9uIGV2ZW50PSJpbm1pZ3JhdGlvbiIgdGFibGUtbmFtZT0iaW5fbWlncmF0aW9u
X2NvcmUiPgogIDxfdXJpID48L191cmk+CiAgPG1pZ3JhdGlvbl9yZWFzb24gPjwvbWlncmF0aW9u
X3JlYXNvbj4KICA8bWlncmF0aW9uX29yaWdpbiA+PC9taWdyYXRpb25fb3JpZ2luPgogIDxsb2Nh
dGlvbl9leHRfaWQgPjwvbG9jYXRpb25fZXh0X2lkPgogIDxjb2xsZWN0aW9uX2RhdGVfdGltZSA+
PC9jb2xsZWN0aW9uX2RhdGVfdGltZT4KICA8aW5kaXZpZHVhbF9leHRfaWQgPjwvaW5kaXZpZHVh
bF9leHRfaWQ+CiAgPG1pZ3JhdGlvbl90eXBlID48L21pZ3JhdGlvbl90eXBlPgogIDx2aXNpdF9l
eHRfaWQgPjwvdmlzaXRfZXh0X2lkPgogIDxuZWVkc19yZXZpZXcgPjwvbmVlZHNfcmV2aWV3Pgog
IDxmaWVsZF93b3JrZXJfZXh0X2lkID48L2ZpZWxkX3dvcmtlcl9leHRfaWQ+CiAgPHByb2Nlc3Nl
ZF9ieV9taXJ0aCA+PC9wcm9jZXNzZWRfYnlfbWlydGg+CiAgPG1pZ3JhdGlvbl9kYXRlID48L21p
Z3JhdGlvbl9kYXRlPgo8L2lubWlncmF0aW9uPg==</inboundTemplate>
        <outboundTemplate encoding="base64">PGluTWlncmF0aW9uRm9ybT4KICA8bWlncmF0aW9uX3JlYXNvbiA+PC9taWdyYXRpb25fcmVhc29u
PgogIDxtaWdyYXRpb25fb3JpZ2luID48L21pZ3JhdGlvbl9vcmlnaW4+CiAgPGxvY2F0aW9uX2V4
dF9pZCA+PC9sb2NhdGlvbl9leHRfaWQ+CiAgPGNvbGxlY3Rpb25fZGF0ZV90aW1lID48L2NvbGxl
Y3Rpb25fZGF0ZV90aW1lPgogIDxpbmRpdmlkdWFsX2V4dF9pZCA+PC9pbmRpdmlkdWFsX2V4dF9p
ZD4KICA8bWlncmF0aW9uX3R5cGUgPjwvbWlncmF0aW9uX3R5cGU+CiAgPHZpc2l0X2V4dF9pZCA+
PC92aXNpdF9leHRfaWQ+CiAgPG5lZWRzX3JldmlldyA+PC9uZWVkc19yZXZpZXc+CiAgPGZpZWxk
X3dvcmtlcl9leHRfaWQgPjwvZmllbGRfd29ya2VyX2V4dF9pZD4KICA8cHJvY2Vzc2VkX2J5X21p
cnRoID48L3Byb2Nlc3NlZF9ieV9taXJ0aD4KICA8bWlncmF0aW9uX2RhdGUgPjwvbWlncmF0aW9u
X2RhdGU+CjwvaW5NaWdyYXRpb25Gb3JtPg==</outboundTemplate>
        <inboundDataType>XML</inboundDataType>
        <outboundDataType>XML</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.0.3">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.0.3">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.0.3">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.0.3">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.0.3">
        <steps/>
        <inboundDataType>XML</inboundDataType>
        <outboundDataType>XML</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.0.3">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.0.3">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.0.3">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.0.3">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.0.3">
        <rules>
          <rule>
            <sequenceNumber>0</sequenceNumber>
            <name>New Rule</name>
            <data>
              <entry>
                <string>Script</string>
                <string>return msg[&quot;@event&quot;].toString() === &quot;inmigration&quot;;</string>
              </entry>
            </data>
            <type>JavaScript</type>
            <script>return msg[&quot;@event&quot;].toString() === &quot;inmigration&quot;;</script>
            <operator>NONE</operator>
          </rule>
        </rules>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
  </destinationConnectors>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map

markRecordAsProcessed(messageObject.getRawData());

return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <shutdownScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</shutdownScript>
  <properties version="3.0.3">
    <clearGlobalChannelMap>true</clearGlobalChannelMap>
    <messageStorageMode>DEVELOPMENT</messageStorageMode>
    <encryptData>false</encryptData>
    <removeContentOnCompletion>false</removeContentOnCompletion>
    <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
    <initialState>STARTED</initialState>
    <storeAttachments>false</storeAttachments>
    <tags class="linked-hash-set"/>
    <metaDataColumns>
      <metaDataColumn>
        <name>SOURCE</name>
        <type>STRING</type>
        <mappingName>mirth_source</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>TYPE</name>
        <type>STRING</type>
        <mappingName>mirth_type</mappingName>
      </metaDataColumn>
    </metaDataColumns>
    <attachmentProperties>
      <type>None</type>
      <properties/>
    </attachmentProperties>
    <archiveEnabled>true</archiveEnabled>
  </properties>
</channel>