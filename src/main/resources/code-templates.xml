<list>
  <codeTemplate version="3.0.1">
    <id>6758f0cc-1618-4c7a-b3fe-3d1ae4b40246</id>
    <name>Result Set to XML</name>
    <tooltip>Converts a java.sql.ResultSet to an XML representation. The XML will have elements named after the column names, and the values of those XML elements will be the column values</tooltip>
    <code>// rs - the ResultSet instance
// xmlElement - a string containing the document level xml element to use for the XML document
function resultSetToXml(rs, xmlElement) {
  var rsmd = rs.getMetaData();
  var result = new XML(xmlElement);

  for (var i = 1; i &lt;= rsmd.getColumnCount(); i++)  {
	var value = rs.getString(i);

    if (value === &quot;null&quot;) {
      value = null;
    }

    result[rsmd.getColumnName(i).toLowerCase()] = value;
  }

  return result;
}</code>
    <type>FUNCTION</type>
    <scope>0</scope>
  </codeTemplate>
  <codeTemplate version="3.0.1">
    <id>b3441bd0-63cd-4bd4-96d1-bf98d21a4cdd</id>
    <name>Mark Record as processed</name>
    <tooltip></tooltip>
    <code>function markRecordAsProcessed(rawData) {
  var originalXml = new XML(rawData);
  // retrieve the table to update
  var tableName = originalXml[&quot;@table-name&quot;].toString();
  var uri = originalXml[&quot;_uri&quot;].toString();

    if (tableName !== &quot;OMGIM&quot;) {
  var dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;, globalMap.get(&quot;ODK_DATABASE_URL&quot;), globalMap.get(&quot;ODK_DATABASE_USER&quot;), globalMap.get(&quot;ODK_DATABASE_PASSWORD&quot;));
  var result = dbConn.executeUpdate(&quot;UPDATE &quot; + tableName + &quot; SET processed_by_mirth = true WHERE _URI = &apos;&quot; + uri + &quot;&apos;&quot;);
  dbConn.close();
} 
}</code>
    <type>FUNCTION</type>
    <scope>0</scope>
  </codeTemplate>
</list>