<map>
  <entry>
    <string>Undeploy</string>
    <string>// This script executes once when all channels shut down from a redeploy
// You only have access to the globalMap here to persist data
return;</string>
  </entry>
  <entry>
    <string>Deploy</string>
    <string>// This script executes once when all channels start up from a redeploy&#xd;
// You only have access to the globalMap here to persist data&#xd;

// odk credentials&#xd;
globalMap.put(&apos;ODK_DATABASE_URL&apos;,&apos;jdbc:mysql://localhost/odk_prod&apos;);&#xd;
globalMap.put(&apos;ODK_DATABASE_USER&apos;,&apos;mirth_odk&apos;);&#xd;
globalMap.put(&apos;ODK_DATABASE_PASSWORD&apos;,&apos;g0m1rthg0!&apos;);&#xd;
&#xd;
// openhds credentials&#xd;
globalMap.put(&apos;OPENHDS_PATH&apos;,&apos;localhost:8080/openhds&apos;);&#xd;
globalMap.put(&apos;OPENHDS_USER&apos;,&apos;openhds&apos;);&#xd;
globalMap.put(&apos;OPENHDS_PASSWORD&apos;,&apos;openhds&apos;);&#xd;
&#xd;
// sequence of odk tables that Mirth should query&#xd;
globalMap.put(&apos;ODK_TABLE_SEQUENCE&apos;, [
				&apos;LOCATION_CORE&apos;,
				&apos;INDIVIDUAL_CORE&apos;,
			 	&apos;VISIT_CORE&apos;,
				&apos;PREGNANCY_OBSERVATION_CORE&apos;, 
				&apos;PREGNANCY_OUTCOME_CORE&apos;,
				&apos;PREGNANCY_OUTCOME_OUTCOMES&apos;, 
				&apos;OUT_MIGRATION_CORE&apos;, 
				&apos;IN_MIGRATION_CORE&apos;, 
				&apos;DEATH_CORE&apos;])&#xd;
&#xd;
// map odk table names to form events that Mirth should emit&#xd;
globalMap.put(&apos;LOCATION_CORE&apos;, &apos;locationForm&apos;);&#xd;
globalMap.put(&apos;INDIVIDUAL_CORE&apos;, &apos;individualForm&apos;);&#xd;
globalMap.put(&apos;VISIT_CORE&apos;, &apos;visitForm&apos;);&#xd;
globalMap.put(&apos;PREGNANCY_OBSERVATION_CORE&apos;, &apos;pregnancyObservationForm&apos;);&#xd;
globalMap.put(&apos;PREGNANCY_OUTCOME_CORE&apos;, &apos;pregnancyOutcomeCoreForm&apos;);&#xd;globalMap.put(&apos;PREGNANCY_OUTCOME_OUTCOMES&apos;, &apos;pregnancyOutcomeOutcomesForm&apos;);
globalMap.put(&apos;OUT_MIGRATION_CORE&apos;, &apos;outMigrationForm&apos;);
globalMap.put(&apos;IN_MIGRATION_CORE&apos;, &apos;inMigrationForm&apos;);
globalMap.put(&apos;DEATH_CORE&apos;, &apos;deathForm&apos;);

// how many ODK forms Mirth should try to process at a time
globalMap.put(&apos;ODK_FORM_LIMIT&apos;, &apos;300&apos;);

return;</string>
  </entry>
  <entry>
    <string>Preprocessor</string>
    <string>// Modify the message variable below to pre process data
// This script applies across all channels
return message;</string>
  </entry>
  <entry>
    <string>Postprocessor</string>
    <string>// This script executes once after a message has been processed
// This script applies across all channels
return;</string>
  </entry>
</map>
